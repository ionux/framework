@model ThreeBytes.User.Authentication.Password.Frontend.Models.ResetPasswordViewModel

@{
    ViewBag.Title = Resources.BrowserTitleResetPassword;
}

<div id="reset-password-container">
    <div id="reset-password-modal" class="modal hide fade">
        <div class="modal-header">
            <a href="#" class="close" data-bind="click: raiseFormClose">×</a>
            <h3>@Resources.ResetPassword</h3>
        </div>
        <div class="modal-body">
            <form id="reset-password-form">
                <fieldset>
                    <div data-bind="error: GeneralErrors"></div>
                    <div class="clearfix">
                        @Html.LabelFor(model => model.UserIdentifier, Resources.UserIdentifier)
                        <div class="input">
                            @Html.TextBoxFor(model => model.UserIdentifier, new { @data_bind = "value: UserIdentifier" })
                            <div data-bind="error: UserIdentifierErrors"></div>
                        </div>
                     </div>           
                </fieldset>
            </form>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" data-bind="click: submitResetPassword">@Resources.ResetPassword</button>&nbsp;<button class="btn btn-danger" data-bind="click: raiseFormClose">Close</button>
        </div>
    </div>

    <div id="reset-password-success-modal" class="modal hide fade">
        <div class="modal-header">
            <a href="#" class="close" data-bind="click: raiseSuccessClose">×</a>
            <h3>@Resources.PasswordResetSuccess</h3>
        </div>
        <div class="modal-body">
            <p>@Resources.WeAreProcessingYourRequest  @Html.ActionLink(Resources.ResetPasswordConfirm, "ResetPasswordConfirm", "PasswordManagement").</p>
        </div>
        <div class="modal-footer">
            <button class="btn btn-danger" data-bind="click: raiseSuccessClose">Close</button> 
        </div>
    </div>
</div>

@{ 
  using (Html.BeginScriptContext())
  {
    Html.AddScriptBlock(@"
        var reset_password = {};

        (function (index) {

            reset_password = index;

            index.UserIdentifier = ko.observable();

            var val = ko.setupValidation([], []);
            val.createErrorCollections({UserIdentifier: 0, General: 0}, index, 'reset-password-form');

            index.submitResetPassword = function () {
                jQuery.post('" + @Url.Action("ResetPassword", "PasswordManagement") + @"', { 'userIdentifier': index.UserIdentifier() }, function (dataReturned) {                    
                    if (dataReturned.IsValid) {
                        index.formModal.modal('hide');
                        index.successModal.modal('show');
                    }
                    else
                    {
                        val.rebindValidations({UserIdentifier: 0, General: 0}, index, dataReturned.Errors);
                    }
                });
            };

            index.raiseFormOpen = function () {
                val.clearValidations({UserIdentifier: 0, General: 0}, index);
                index.formModal.modal('show');
            };

            index.raiseSuccessClose = function () {
                index.successModal.modal('hide');
            };

            index.raiseFormClose = function () {
                index.formModal.modal('hide');
            };

            jQuery(document).bind('resetPassword', function (event, id) {
                index.formModal.modal('show');
            });

            jQuery(function () {
                ko.applyBindings(index, jQuery('#reset-password-container')[0]);
                index.formModal = jQuery('#reset-password-modal').modal({ backdrop: true, closeOnEscape: true, modal: true, show: false });
                index.successModal = jQuery('#reset-password-success-modal').modal({ backdrop: true, closeOnEscape: true, modal: true, show: false });
            });
        } (reset_password));");
  }
}