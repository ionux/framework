@model ThreeBytes.User.Authentication.Password.Frontend.Models.ResetPasswordConfirmViewModel

@{
    ViewBag.Title = Resources.BrowserTitleResetPasswordConfirm;
}

<section id="reset-password-confirm">
    <div id="reset-password-confirm-container">
        <div class="hero-unit">
            <h1>@Resources.ResetPasswordConfirm</h1> 
        </div>
        <div class="row">
            <div class="span6">&nbsp;</div>
            <div class="span5 well">
                @if (Model.Success)
                 {
                     <h2>@Resources.PasswordResetSuccess</h2>
                     <p>@Resources.ItMayTakeAFewMoments @Html.ActionLink("Login Page", "Login", "Login")</p>
                 }
                else
                {
                    using (Html.BeginForm("ResetPasswordConfirm", "PasswordManagement", FormMethod.Post, new { id = "reset-password-confirm-form" }))
                    {
                         <fieldset>
                             <div class="clearfix">
                                 @Html.LabelFor(model => model.UserIdentifier, Resources.UserIdentifier)
                                 <div class="input">
                                     @Html.EditorFor(model => model.UserIdentifier)
                                     @if (!ViewData.ModelState.IsValidField("UserIdentifier"))
                                     {
                                         <div class="alert alert-error">
                                             <a class="close" data-dismiss="alert">×</a>
                                             @Html.ValidationMessageFor(model => model.UserIdentifier)
                                         </div>
                                     }
                                 </div>
                             </div>

                             <div class="clearfix">
                                 @Html.LabelFor(model => model.Password, Resources.NewPassword)
                                 <div class="input">
                                     @Html.PasswordFor(model => model.Password)
                                     @if (!ViewData.ModelState.IsValidField("Password"))
                                     {
                                         <div class="alert alert-error">
                                             <a class="close" data-dismiss="alert">×</a>
                                             @Html.ValidationMessageFor(model => model.Password)
                                         </div>
                                     }
                                 </div>
                             </div>

                             <div class="clearfix">
                                 @Html.LabelFor(model => model.ConfirmPassword, Resources.ConfirmPassword)
                                 <div class="input">
                                     @Html.PasswordFor(model => model.ConfirmPassword)
                                     @if (!ViewData.ModelState.IsValidField("ConfirmPassword"))
                                     {
                                         <div class="alert alert-error">
                                             <a class="close" data-dismiss="alert">×</a>
                                             @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                         </div>
                                     }
                                 </div>
                             </div>

                             <div class="clearfix">
                                 @Html.LabelFor(model => model.ResetPasswordCode, Resources.ResetPasswordCode)
                                 <div class="input">
                                     @Html.EditorFor(model => model.ResetPasswordCode)
                                     @if (!ViewData.ModelState.IsValidField("ResetPasswordCode"))
                                     {
                                         <div class="alert alert-error">
                                             <a class="close" data-dismiss="alert">×</a>
                                             @Html.ValidationMessageFor(model => model.ResetPasswordCode)
                                         </div>
                                     }
                                 </div>
                             </div>

                             <div>
                                <button class="btn btn-primary pull-right" data-bind="click: resetPasswordConfirm">@Resources.ResetPassword</button>
                             </div>
                         </fieldset>
                     }
                 }
            </div>
        </div>
    </div>
</section>

@{ 
    if (!Model.Success)
    {
        using (Html.BeginScriptContext())
        {
            Html.AddScriptBlock(@"
            var reset_password_confirm = {};

            (function (index) {

                reset_password_confirm = index;

                index.resetPasswordConfirm = function () {
                    jQuery('#reset-password-confirm-form').submit();
                };

                jQuery(function () {
                    ko.applyBindings(index, jQuery('#reset-password-confirm-container')[0]);
                });

            } (reset_password_confirm));");
        }
    }
}