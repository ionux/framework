#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeBytes.Email.Template.Management.Frontend.Views.EmailTemplateManagement
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Script.Serialization;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using ThreeBytes.Core.Extensions.Mvc;
    using ThreeBytes.Email.Template.Management.Resources;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/EmailTemplateManagement/Create.cshtml")]
    public class Create : System.Web.Mvc.WebViewPage<ThreeBytes.Email.Template.Management.Entities.EmailTemplateManagementTemplate>
    {
        public Create()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Views\EmailTemplateManagement\Create.cshtml"
  
    ViewBag.Title = Resources.BrowserTitleCreate;


            
            #line default
            #line hidden
WriteLiteral("\r\n<div id=\"create-template-container\">\r\n    <p>\r\n        <button class=\"btn btn-p" +
"rimary\" data-bind=\"click: raiseCreate\" rel = \"popover\" data_content =\"");


            
            #line 8 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                                                                                                 Write(Resources.CreatePopoverContent);

            
            #line default
            #line hidden
WriteLiteral("\" data_original_title =\"");


            
            #line 8 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                                                                                                                                                        Write(Resources.CreatePopoverTitle);

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 8 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                                                                                                                                                                                       Write(Resources.Create);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n    </p>\r\n    <div id=\"email-template-create-modal\" class=\"modal modal" +
"-medium-wide hide fade\">\r\n        <div class=\"modal-header\">\r\n            <a hre" +
"f=\"#\" class=\"close\" data-bind=\"click: raiseClose\">×</a>\r\n            <h3>");


            
            #line 13 "..\..\Views\EmailTemplateManagement\Create.cshtml"
           Write(Resources.CreateTemplate);

            
            #line default
            #line hidden
WriteLiteral(@"</h3>
        </div>
        <div class=""modal-body modal-body-scrollable"">
            <div data-bind=""error: GeneralErrors""></div>
            <form id=""create-template-form"">
                <fieldset>
                    <div class=""clearfix"">
                        ");


            
            #line 20 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.Name, Resources.Name));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 22 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.TextBoxFor(model => model.Name, new { @data_val = "true", @data_val_required = "'Name' should not be empty.", @data_val_length = "'Name' must be a string with a maximum length of 64.", @data_val_length_max = "64", @data_bind = "value: Name" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div data-valmsg-for=\"Name\" data-valmsg-replace=\"tr" +
"ue\" data-bind=\"error: NameErrors\"></div>\r\n                        </div>\r\n      " +
"              </div>\r\n                    <div class=\"clearfix\">\r\n              " +
"          ");


            
            #line 27 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.From, Resources.From));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 29 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.TextBoxFor(model => model.From, new { @data_val = "true", @data_val_required = "'From' should not be empty.", @data_val_email = "'From' is not a valid email address.", @data_val_length = "'From' must be a string with a maximum length of 128.", @data_val_length_max = "128", @data_bind = "value: From" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div data-valmsg-for=\"From\" data-valmsg-replace=\"tr" +
"ue\" data-bind=\"error: FromErrors\"></div>\r\n                        </div>\r\n      " +
"              </div>\r\n                    <div class=\"clearfix\">\r\n              " +
"          ");


            
            #line 34 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.Subject, Resources.Subject));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 36 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.TextBoxFor(model => model.Subject, new { @data_val = "true", @data_val_required = "'Subject' should not be empty.", @data_val_length = "'Subject' must be a string with a maximum length of 255.", @data_val_length_max = "255", @data_bind = "value: Subject" }));

            
            #line default
            #line hidden
WriteLiteral(@"
                            <div data-valmsg-for=""Subject"" data-valmsg-replace=""true"" data-bind=""error: SubjectErrors""></div>
                        </div>
                    </div>
                    <div class=""clearfix"">
                        ");


            
            #line 41 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.Body, Resources.Body));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 43 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.TextAreaFor(model => model.Body, new { @data_val = "true", @data_val_required = "'Body' should not be empty.", @data_bind = "value: Body" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div data-valmsg-for=\"Body\" data-valmsg-replace=\"tr" +
"ue\" data-bind=\"error: BodyErrors\"></div>\r\n                        </div>\r\n      " +
"              </div>\r\n                    <div class=\"clearfix\">\r\n              " +
"          ");


            
            #line 48 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.IsHtml, Resources.Html));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 50 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.CheckBoxFor(model => model.IsHtml, new { @data_bind = "value: IsHtml" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            <div data-valmsg-for=\"IsHtml\" data-valmsg-replace=\"" +
"true\" data-bind=\"error: IsHtmlErrors\"></div>\r\n                        </div>\r\n  " +
"                  </div>\r\n                    <div class=\"clearfix\">\r\n          " +
"              ");


            
            #line 55 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                   Write(Html.LabelFor(model => model.Encoding, Resources.Encoding));

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <div class=\"input input-small-margin\">\r\n               " +
"             ");


            
            #line 57 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                       Write(Html.EnumDropDownListFor(model => model.Encoding));

            
            #line default
            #line hidden
WriteLiteral(@"
                            <div data-valmsg-for=""Encoding"" data-valmsg-replace=""true"" data-bind=""error: EncodingErrors""></div>
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <div class=""modal-footer"">
            <button type=""submit"" class=""btn btn-primary"" data-bind=""click: save"">");


            
            #line 65 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                                                                             Write(Resources.SaveChanges);

            
            #line default
            #line hidden
WriteLiteral("</button>&nbsp;\r\n            <button type=\"submit\" class=\"btn btn-danger\" data-bi" +
"nd=\"click: raiseClose\">");


            
            #line 66 "..\..\Views\EmailTemplateManagement\Create.cshtml"
                                                                                  Write(Resources.Cancel);

            
            #line default
            #line hidden
WriteLiteral("</button>&nbsp;\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");


            
            #line 71 "..\..\Views\EmailTemplateManagement\Create.cshtml"
   
  using (Html.BeginScriptContext())
  {
    Html.AddScriptBlock(@"
        var email_template_create = {};

        (function (index) {

            email_template_create = index;

            var val = ko.setupValidation([], []);
            val.createErrorCollections({Name: 0, From: 0, Subject: 0, Body: 0, IsHtml: 0, Encoding: 0, General: 0}, index, 'create-template-form');

            index.Id = ko.observable();
            index.Name = ko.observable();
            index.From = ko.observable();
            index.Subject = ko.observable();
            index.Body = ko.observable();
            index.IsHtml = ko.observable();
            index.Encoding = ko.observable();

            index.toJSON = function() {
                return { Id: index.Id(), Name: index.Name(), From: index.From(), Subject: index.Subject(), Body: index.Body(), IsHtml: index.IsHtml(), Encoding: index.Encoding() }
            }

            index.raiseCreate = function () {
                index.createModal.modal('show');
            };

            index.raiseClose = function () {
                index.createModal.modal('hide');
            };

            index.save = function (form) {
                if(!jQuery('#create-template-form').valid())
                    return;

                jQuery.post('" + @Url.Action("Create", "Template") + @"', index.toJSON(), function (dataReturned) {
                    if (dataReturned.IsValid) {
                        jQuery(document).trigger('emailTemplateCreated');
                        index.createModal.modal('hide');
                    }
                    else {
                        val.rebindValidations({Name: 0, From: 0, Subject: 0, Body: 0, IsHtml: 0, Encoding: 0, General: 0}, index, dataReturned.Errors);
                    }
                });
            };

            jQuery(function () {
                ko.applyBindings(index, jQuery('#create-template-container')[0]);
                index.createModal = jQuery('#email-template-create-modal').modal({ backdrop: true, closeOnEscape: true, modal: true, show: false });
            });

        } (email_template_create));");
  }

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
