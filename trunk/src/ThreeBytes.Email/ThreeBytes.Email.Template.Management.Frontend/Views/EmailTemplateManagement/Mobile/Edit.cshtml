@model ThreeBytes.Email.Template.Management.Entities.EmailTemplateManagementTemplate
           
<div id="edit" data-role="page">
    <div data-role="header">
        <h1>Edit</h1>
    </div>
    <div data-role="content">
        <div id="edit-template-container">
            @Html.HiddenFor(model => model.Id, new { @data_bind = "value: Id" })
        
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @data_bind = "value: Name" })
                @Html.ValidationMessageFor(model => model.Name)
                <button type="submit" data-bind="click: function() { email_template_edit.saveName() }" class="btn primary" data-theme="b">Rename</button>
            </div>
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.From)
                @Html.TextBoxFor(model => model.From, new { @data_bind = "value: From" })
                @Html.ValidationMessageFor(model => model.From)
                <button type="submit" data-bind="click: function() { email_template_edit.saveFromAddress() }" class="btn primary" data-theme="b">Rename</button>
            </div>
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.Subject)
                @Html.TextBoxFor(model => model.Subject, new { @data_bind = "value: Subject" })
                @Html.ValidationMessageFor(model => model.Subject)
            </div>
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.Body)
                @Html.TextAreaFor(model => model.Body, new { @data_bind = "value: Body" })
                @Html.ValidationMessageFor(model => model.Body)
            </div>
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.IsHtml)
                @Html.CheckBoxFor(model => model.IsHtml, new { @data_bind = "value: IsHtml" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div data-role="fieldcontain">
                @Html.LabelFor(model => model.Encoding)
                @Html.EnumDropDownListFor(model => model.Encoding)
                @Html.ValidationMessageFor(model => model.Encoding)
                <button type="submit" data-bind="click: function() { email_template_edit.saveTemplateContent() }" class="btn primary" data-theme="b">Update</button>
            </div>
            <a href="#" data-bind="click: function() { email_template_edit.raiseBack() }" data-role="button" data-icon="arrow-l" data-theme="a">Back</a>
        </div>
    </div>
    <div data-role="footer">
        <h4>Designed and built by <a href="http://www.threebytes.co.uk" target="_blank">Three Bytes</a>.</h4>
    </div>
</div>

<script type="text/javascript">

    var email_template_edit = {};

    (function (index) {

        email_template_edit = index;

        index.Id = ko.observable();

        index.Name = ko.observable();
        index.ApplicationName = ko.observable();
        index.From = ko.observable();
        index.Subject = ko.observable();
        index.Body = ko.observable();
        index.IsHtml = ko.observable();
        index.Encoding = ko.observable();

        index.raiseBack = function () {
            jQuery(document).trigger('emailTemplateDetails', [index]);
        };

        index.saveName = function (form) {
            var data = jQuery(form).serialize();

            jQuery.post("Template/Rename", data, function (returnedData) {
                jQuery(document).trigger('emailTemplateUpdated', [returnedData.Id]);
            });
        };

        index.saveFromAddress = function (form) {
            var data = jQuery(form).serialize();

            jQuery.post("Template/RenameFromAddress", data, function (returnedData) {
                jQuery(document).trigger('emailTemplateUpdated', [returnedData.Id]);
            });
        };

        index.saveTemplateContent = function (form) {
            var data = jQuery(form).serialize();

            jQuery.post("Template/Update", data, function (returnedData) {
                jQuery(document).trigger('emailTemplateUpdated', [returnedData.Id]);
            });
        };

        jQuery(document).bind('emailTemplateEdit', function (event, id) {

            jQuery.getJSON("Template/Edit/" + id, function (data) {

                index.Id(data.Id);
                index.Name(data.Name);
                index.ApplicationName(data.ApplicationName);
                index.From(data.From);
                index.Subject(data.Subject);
                index.Body(data.Body);
                index.IsHtml(data.IsHtml);
                index.Encoding(data.Encoding);

                jQuery.mobile.changePage("#edit", "flip", true, false);
            });
        });

        jQuery(function () {
            ko.applyBindings(index, jQuery('#edit-template-container')[0]);
        });
    } (email_template_edit));
</script>