@model ThreeBytes.Email.Template.List.Frontend.Models.PagedEmailTemplateEmailViewModel
<div id="paged-templates-container">
    <ul data-role="listview" data-inset="true" data-bind="template: { name: 'email-template-list-grid-tmpl', foreach: showCurrentPage }"
        class="ui-listview ui-listview-inset ui-corner-all ui-shadow">
    </ul>
</div>
<script type="text/javascript">

    var email_template_paged_list = {};

    (function (index) {
        jQuery.getJSON("/EmailTemplateList/List", function (data) {

            email_template_paged_list = index = ko.mapping.fromJS(data);

            index.requestedPages = ko.observableArray([]);
            index.requestedPages.push(data.PageNumber);

            index.plural = ko.dependentObservable(function () {
                return this.TotalItemCount() == 1 ? 'template' : 'templates';
            }, index);

            index.is_are = ko.dependentObservable(function () {
                return this.TotalItemCount() == 1 ? 'is' : 'are';
            }, index);

            index.navigate = function (obj) {

                var el = obj.target;

                if (el.id === "next") {
                    if (index.PageNumber() < ko.utils.unwrapObservable(index.PageCount())) {
                        index.PageNumber(index.PageNumber() + 1);
                    }
                }
                else if (el.id === "prev") {
                    if (index.PageNumber() > 1) {
                        index.PageNumber(index.PageNumber() - 1);
                    }
                }
                else {
                    index.PageNumber(parseInt(el.innerText));
                }

                var makeRequest = true;

                jQuery.each(index.requestedPages(), function () {
                    if (this == index.PageNumber()) {
                        makeRequest = false;
                    }
                });

                if (makeRequest) {
                    jQuery.getJSON("/EmailTemplateList/List", { 'page': index.PageNumber(), 'datetime': GetDotNetDate(index.OriginalRequestDateTime()) }, function (data) {
                        jQuery.each(data.Items, function () {
                            index.Items.push(ko.mapping.fromJS(this));
                        });

                        index.requestedPages.push(index.PageNumber());
                    });
                }
            };

            index.showCurrentPage = ko.dependentObservable(function () {
                var startIndex = 10 * (index.PageNumber() - 1);
                return index.Items.slice(startIndex, startIndex + 10);
            });

            index.raiseEdit = function (obj) {
                jQuery(document).trigger('emailTemplateEdit', [obj.Id()]);
            };

            index.raiseDetails = function (obj) {
                jQuery(document).trigger('emailTemplateDetails', [obj, 'list']);
            };

            index.raiseDelete = function (obj) {
                jQuery(document).trigger('emailTemplateDelete', [obj.Id()]);
            };

            jQuery(function () {
                ko.applyBindings(index, jQuery('#paged-templates-container')[0]);
            });

            jQuery(document).bind('newEmailTemplates', function (event, items) {
                jQuery.each(items, function (i, item) {
                    index.Items.unshift(item);
                });
            });

            jQuery(document).bind('emailTemplateUpdated', function (event, id) {
                setTimeout(function () {
                    jQuery.getJSON("/EmailTemplateList/Get", { 'id': id }, function (data) {
                        var replacement = ko.mapping.fromJS(data);

                        jQuery.each(index.Items(), function (i, item) {
                            if (item.Id() == id) {
                                index.Items.splice(i, 1, replacement);
                                return false;
                            }
                        });
                    });
                }, 200);
            });

            jQuery(document).bind('emailTemplateDeleted', function (event, id) {
                jQuery.each(index.Items(), function (i, item) {
                    if (item.Id() == id) {
                        index.Items.splice(i, 1);
                        return false;
                    }
                });

                if (index.Items().length < 10) {
                    jQuery.getJSON("/EmailTemplateList/List", { 'page': index.PageNumber(), 'datetime': GetDotNetDate(index.OriginalRequestDateTime()) }, function (data) {
                        ko.mapping.fromJS(data, index);
                    });
                }
            });
        }, email_template_paged_list);
    } (email_template_paged_list));
</script>

<script id="email-template-list-grid-tmpl" type="text/x-jquery-tmpl">    
    <li data-theme="c" class="ui-btn ui-btn-icon-right ui-li-has-arrow ui-li ui-btn-up-c">
        <div class="ui-btn-inner ui-li" aria-hidden="true">
            <div class="ui-btn-text">
                <a href="#" data-bind="click: function() { email_template_paged_list.raiseDetails($data) }" class="ui-link-inherit">
                <p class="ui-li-aside ui-li-desc"><strong>${GetDate(CreationDateTime())}</strong></p>
                    <h3 class="ui-li-heading">${Name}</h3>
                    <p class="ui-li-desc">${ApplicationName}</p>
                </a>
            </div>
            <span class="ui-icon ui-icon-arrow-r ui-icon-shadow"></span>
        </div>
    </li>
</script>