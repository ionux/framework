#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeBytes.Email.Dispatch.List.Frontend.Views.EmailDispatchList
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Script.Serialization;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using ThreeBytes.Core.Extensions.Mvc;
    using ThreeBytes.Email.Dispatch.List.Resources;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/EmailDispatchList/List.cshtml")]
    public class List : System.Web.Mvc.WebViewPage<ThreeBytes.Email.Dispatch.List.Frontend.Models.PagedEmailDispatchListEmailMessageViewModel>
    {
        public List()
        {
        }
        public override void Execute()
        {

WriteLiteral("\r\n");


            
            #line 3 "..\..\Views\EmailDispatchList\List.cshtml"
  
    ViewBag.Title = Resources.BrowserTitle;


            
            #line default
            #line hidden
WriteLiteral(@"
<div id=""latest-dispatched-emails-container"">
    <div data-bind=""latestItems: latestViewModel""></div>
</div>
<div id=""paged-dispatched-emails-container"">
    <div data-bind=""pagedGrid: pagedViewModel, pagedGridTemplate: 'paged-user-roles-table-tmpl'""></div>
</div>  

<script type=""text/x-jquery-tmpl"" id=""paged-user-roles-table-tmpl"">
    <div class=""overall-table-count"">
        <em>");


            
            #line 16 "..\..\Views\EmailDispatchList\List.cshtml"
       Write(Resources.There);

            
            #line default
            #line hidden
WriteLiteral(@"&nbsp;<span data-bind=""text: is_are""></span>&nbsp;<span data-bind=""text: totalItemCount""></span>&nbsp;<span data-bind=""text: plural""></span></em>
    </div>
    <table id=""paged-dispatched-emails-table"" class=""table table-striped table-bordered table-condensed"" data-bind=""visible: items().length > 0"">
        <thead>
            <tr>
                <th>
                    ");


            
            #line 22 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.From);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 25 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.To);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 28 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.CC);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 31 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.BCC);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 34 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.Subject);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 37 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.Html);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");


            
            #line 40 "..\..\Views\EmailDispatchList\List.cshtml"
               Write(Resources.Encoding);

            
            #line default
            #line hidden
WriteLiteral(@"
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody id=""paged-dispatched-emails-tbody"" data-bind=""foreach: items"">
            <tr>        
                <td data-bind=""text: From""></td>
                <td data-bind=""text: To""></td>
                <td data-bind=""text: CC""></td>
                <td data-bind=""text: BCC""></td>
                <td data-bind=""text: Subject""></td>
                <td data-bind=""text: IsHtml""></td>
                <td data-bind=""text: Encoding""></td>
                <td>
                    <button class=""btn btn-info"" data-bind=""click: function(event) { $parent.additionalFunctions.raiseDetails($data); }"">");


            
            #line 56 "..\..\Views\EmailDispatchList\List.cshtml"
                                                                                                                                    Write(Resources.Details);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </tabl" +
"e>\r\n</script>\r\n\r\n\r\n");


            
            #line 64 "..\..\Views\EmailDispatchList\List.cshtml"
   
  using (Html.BeginScriptContext())
  {
    Html.AddScriptBlock(@"
        var dispatched_emails_latest_list  = {};
    
        (function (index) {

            var itemMapping = {
			    'CreationDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm'),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
        
            dispatched_emails_latest_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.MostRecentResult)) + @");

            index.latestViewModel = new ko.latestItems.viewModel({
                controller: 'EmailDispatchList',
                action: 'GetNewerThan',
                data: index,
                singular: '" + Resources.Email + @"',
                plural: '" + Resources.Emails + @"',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                divIdentifier: 'latest-dispatched-emails-container',
                pagingComponentIdentifier: 'paged-dispatched-emails',
                columns: [
                    { headerText: 'Name', rowText: 'Name' },
                    { headerText: 'Creation', rowText: 'CreationDateTime' },
                    { headerText: 'Last Modified', rowText: 'LastModifiedDateTime' }
                ]
            });

            jQuery(function() {
                ko.applyBindings(index, jQuery('#latest-dispatched-emails-container')[0]);
            });

        } (dispatched_emails_latest_list));
    
        var dispatched_emails_paged_list  = {};

        (function (index) {
            
            var itemMapping = {
			    'CreationDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm'),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
    
            dispatched_emails_paged_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.PagedResult)) + @");

            index.pagedViewModel = new ko.pagedGrid.viewModel({
                controller: 'Dispatch',
                action: 'GetPage',
                data: index,
                singular: '" + Resources.Email + @"',
                plural: '" + Resources.Emails + @"',
                pagingComponentIdentifier: 'paged-dispatched-emails',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                columns: [
                    { headerText: 'Name', rowText: 'Name' },
                    { headerText: 'Application Name', rowText: 'ApplicationName' },
                    { headerText: 'Creation Date Time', rowText: 'CreationDateTime' },
                    { headerText: 'Last Modified Date Time', rowText: 'LastModifiedDateTime' }
                ],
                additionalFunctions: {
                    raiseDetails: function (obj) {
                        jQuery(document).trigger('dispatchedEmailDetails', [obj]);
                    }
                }
            });

            jQuery(function() {
                ko.applyBindings(index, jQuery('#paged-dispatched-emails-container')[0]);
            });

        } (dispatched_emails_paged_list));");
  }

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
