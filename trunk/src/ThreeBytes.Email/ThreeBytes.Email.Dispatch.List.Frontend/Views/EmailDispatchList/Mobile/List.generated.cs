#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeBytes.Email.Dispatch.List.Frontend.Views.EmailDispatchList.Mobile
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Script.Serialization;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using ThreeBytes.Core.Extensions.Mvc;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/EmailDispatchList/Mobile/List.cshtml")]
    public class List : System.Web.Mvc.WebViewPage<ThreeBytes.Email.Dispatch.List.Frontend.Models.PagedEmailDispatchListEmailMessageViewModel>
    {
        public List()
        {
        }
        public override void Execute()
        {

WriteLiteral("           \r\n<div id=\"paged-dispatched-emails-container\">\r\n    <ul data-role=\"lis" +
"tview\" data-inset=\"true\" data-bind=\"template: { name: \'dispatched-emails-list-gr" +
"id-tmpl\', foreach: showCurrentPage }\" class=\"ui-listview ui-listview-inset ui-co" +
"rner-all ui-shadow\">\r\n    </ul>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n\r\n  " +
"  var dispatched_emails_latest_list = {};\r\n\r\n    (function (index) {\r\n        jQ" +
"uery.getJSON(\"/EmailDispatchList/List\", function (data) {\r\n\r\n            dispatc" +
"hed_emails_latest_list = index = ko.mapping.fromJS(data);\r\n\r\n            index.r" +
"equestedPages = ko.observableArray([]);\r\n            index.requestedPages.push(d" +
"ata.PageNumber);\r\n\r\n            index.plural = ko.dependentObservable(function (" +
") {\r\n                return this.TotalItemCount() == 1 ? \'email\' : \'emails\';\r\n  " +
"          }, index);\r\n\r\n            index.is_are = ko.dependentObservable(functi" +
"on () {\r\n                return this.TotalItemCount() == 1 ? \'is\' : \'are\';\r\n    " +
"        }, index);\r\n\r\n            index.navigate = function (obj) {\r\n\r\n         " +
"       var el = obj.target;\r\n\r\n                if (el.id === \"next\") {\r\n        " +
"            if (index.PageNumber() < ko.utils.unwrapObservable(index.PageCount()" +
")) {\r\n                        index.PageNumber(index.PageNumber() + 1);\r\n       " +
"             }\r\n                }\r\n                else if (el.id === \"prev\") {\r" +
"\n                    if (index.PageNumber() > 1) {\r\n                        inde" +
"x.PageNumber(index.PageNumber() - 1);\r\n                    }\r\n                }\r" +
"\n                else {\r\n                    index.PageNumber(parseInt(el.innerT" +
"ext));\r\n                }\r\n\r\n                var makeRequest = true;\r\n\r\n        " +
"        jQuery.each(index.requestedPages(), function () {\r\n                    i" +
"f (this == index.PageNumber()) {\r\n                        makeRequest = false;\r\n" +
"                    }\r\n                });\r\n\r\n                if (makeRequest) {" +
"\r\n                    jQuery.getJSON(\"/EmailDispatchList/List\", { \'page\': index." +
"PageNumber(), \'datetime\': GetDotNetDate(index.OriginalRequestDateTime()) }, func" +
"tion (data) {\r\n                        jQuery.each(data.Items, function () {\r\n  " +
"                          index.Items.push(ko.mapping.fromJS(this));\r\n          " +
"              });\r\n\r\n                        index.requestedPages.push(index.Pag" +
"eNumber());\r\n                    });\r\n                }\r\n            };\r\n\r\n     " +
"       index.showCurrentPage = ko.dependentObservable(function () {\r\n           " +
"     var startIndex = 10 * (index.PageNumber() - 1);\r\n                return ind" +
"ex.Items.slice(startIndex, startIndex + 10);\r\n            });\r\n\r\n            ind" +
"ex.raiseDetails = function (obj) {\r\n                jQuery(document).trigger(\'di" +
"spatchedEmailDetails\', [obj, \'list\']);\r\n            };\r\n\r\n            jQuery(fun" +
"ction () {\r\n                ko.applyBindings(index, jQuery(\'#paged-dispatched-em" +
"ails-container\')[0]);\r\n            });\r\n\r\n            jQuery(document).bind(\'new" +
"DispatchedEmails\', function (event, items) {\r\n                jQuery.each(items," +
" function (i, item) {\r\n                    index.Items.unshift(item);\r\n         " +
"       });\r\n            });\r\n        }, dispatched_emails_latest_list);\r\n    } (" +
"dispatched_emails_latest_list));\r\n</script>\r\n\r\n<script id=\"dispatched-emails-lis" +
"t-grid-tmpl\" type=\"text/x-jquery-tmpl\">    \r\n    <li data-theme=\"c\" class=\"ui-bt" +
"n ui-btn-icon-right ui-li-has-arrow ui-li ui-btn-up-c\">\r\n        <div class=\"ui-" +
"btn-inner ui-li\" aria-hidden=\"true\">\r\n            <div class=\"ui-btn-text\">\r\n   " +
"             <a href=\"#\" data-bind=\"click: function() { dispatched_emails_latest" +
"_list.raiseDetails($data) }\" class=\"ui-link-inherit\">\r\n                    <h3 c" +
"lass=\"ui-li-heading\">${To}</h3>\r\n                    <p class=\"ui-li-desc\">${Sub" +
"ject}</p>\r\n                </a>\r\n            </div>\r\n            <span class=\"ui" +
"-icon ui-icon-arrow-r ui-icon-shadow\"></span>\r\n        </div>\r\n    </li>\r\n</scri" +
"pt>");


        }
    }
}
#pragma warning restore 1591
