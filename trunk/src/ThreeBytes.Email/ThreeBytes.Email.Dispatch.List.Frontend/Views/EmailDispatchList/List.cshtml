@model ThreeBytes.Email.Dispatch.List.Frontend.Models.PagedEmailDispatchListEmailMessageViewModel

@{
    ViewBag.Title = Resources.BrowserTitle;
}

<div id="latest-dispatched-emails-container">
    <div data-bind="latestItems: latestViewModel"></div>
</div>
<div id="paged-dispatched-emails-container">
    <div data-bind="pagedGrid: pagedViewModel, pagedGridTemplate: 'paged-user-roles-table-tmpl'"></div>
</div>  

<script type="text/x-jquery-tmpl" id="paged-user-roles-table-tmpl">
<div class="widget widget-table">
    <div class="widget-header">
        <i class="icon-th-list"></i>
        <h3>Dispatched Emails</h3>
        <div class="pull-right-menu">
            <em>@Resources.There&nbsp;<span data-bind="text: is_are"></span>&nbsp;<span data-bind="text: totalItemCount"></span>&nbsp;<span data-bind="text: plural"></span></em>
        </div>
    </div>
    <div class="widget-content">
        <table id="paged-dispatched-emails-table" class="table table-striped table-bordered table-condensed" data-bind="visible: items().length > 0">
            <thead>
                <tr>
                    <th>
                        @Resources.From
                    </th>
                    <th>
                        @Resources.To
                    </th>
                    <th>
                        @Resources.CC
                    </th>
                    <th>
                        @Resources.BCC
                    </th>
                    <th>
                        @Resources.Subject
                    </th>
                    <th>
                        @Resources.Html
                    </th>
                    <th>
                        @Resources.Encoding
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody id="paged-dispatched-emails-tbody" data-bind="foreach: items">
                <tr>        
                    <td data-bind="text: From"></td>
                    <td data-bind="text: To"></td>
                    <td data-bind="text: CC"></td>
                    <td data-bind="text: BCC"></td>
                    <td data-bind="text: Subject"></td>
                    <td data-bind="text: IsHtml"></td>
                    <td data-bind="text: Encoding"></td>
                    <td>
                        <button class="btn btn-info" data-bind="click: function(event) { $parent.additionalFunctions.raiseDetails($data); }">@Resources.Details</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
</script>


@{ 
  using (Html.BeginScriptContext())
  {
    Html.AddScriptBlock(@"
        var dispatched_emails_latest_list  = {};
    
        (function (index) {

            var itemMapping = {
			    'CreationDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm'),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
        
            dispatched_emails_latest_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.MostRecentResult)) + @");

            index.latestViewModel = new ko.latestItems.viewModel({
                controller: 'EmailDispatchList',
                action: 'GetNewerThan',
                data: index,
                singular: '" + Resources.Email + @"',
                plural: '" + Resources.Emails + @"',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                divIdentifier: 'latest-dispatched-emails-container',
                pagingComponentIdentifier: 'paged-dispatched-emails',
                columns: [
                    { headerText: 'Name', rowText: 'Name' },
                    { headerText: 'Creation', rowText: 'CreationDateTime' },
                    { headerText: 'Last Modified', rowText: 'LastModifiedDateTime' }
                ]
            });

            jQuery(function() {
                ko.applyBindings(index, jQuery('#latest-dispatched-emails-container')[0]);
            });

        } (dispatched_emails_latest_list));
    
        var dispatched_emails_paged_list  = {};

        (function (index) {
            
            var itemMapping = {
			    'CreationDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm'),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
    
            dispatched_emails_paged_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.PagedResult)) + @");

            index.pagedViewModel = new ko.pagedGrid.viewModel({
                controller: 'Dispatch',
                action: 'GetPage',
                data: index,
                singular: '" + Resources.Email + @"',
                plural: '" + Resources.Emails + @"',
                pagingComponentIdentifier: 'paged-dispatched-emails',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                columns: [
                    { headerText: 'Name', rowText: 'Name' },
                    { headerText: 'Application Name', rowText: 'ApplicationName' },
                    { headerText: 'Creation Date Time', rowText: 'CreationDateTime' },
                    { headerText: 'Last Modified Date Time', rowText: 'LastModifiedDateTime' }
                ],
                additionalFunctions: {
                    raiseDetails: function (obj) {
                        jQuery(document).trigger('dispatchedEmailDetails', [obj]);
                    }
                }
            });

            jQuery(function() {
                ko.applyBindings(index, jQuery('#paged-dispatched-emails-container')[0]);
            });

        } (dispatched_emails_paged_list));");
  }
}