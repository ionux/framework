@model ThreeBytes.ProjectHollywood.News.View.Entities.NewsViewNewsArticle

@{
    ViewBag.Title = "";
}

<div id="details-news-article-container">
    <div id="news-article-details-modal" class="modal modal-medium-wide hide fade">
        <div class="modal-header">
            <a href="#" class="close" data-bind="click: raiseClose">×</a>
            <h3>
                <span data-bind="fadeInText:Title"></span> <span class="pull-right" data-bind="fadeInText: GetDate(CreationDateTime())"></span>
            </h3>
        </div>
        <div class="modal-body modal-body-scrollable">
            <div class="row">
                <div class="span12">
                    <fieldset>
                        <div class="display-field"><span data-bind="fadeInText:Content"></span></div>
                    </fieldset>
                </div>
            </div>
            @if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "NewsManager" }))
            {
                <div id="news-article-history-container" class="row" data-bind="visible: History().length > 0">
                    <div class="span6 well-large">
                        <h2>@Resources.History</h2>
                        <table class="table table-striped table-bordered table-condensed scrollable">
                            <thead>
                                <tr>
                                    <th>Date Time</th>
                                    <th>@Resources.Operation</th>
                                </tr>
                            </thead>
                            <tbody id="role-tbody" data-bind="foreach: History">
                                <tr>        
                                    <td data-bind="text: GetDate(LastModifiedDateTime)"></td>
                                    <td data-bind="text: Operation"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            @if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "NewsManager" }))
            {
                <button class="btn btn-primary" data-bind="click: raiseEdit">@Resources.Edit</button>
                <button class="btn btn-danger" data-bind="click: raiseDelete">@Resources.Delete</button>
            }
            <button class="btn btn-danger" data-bind="click: raiseClose">Close</button>
        </div>
    </div>
</div>

@{ 
  using (Html.BeginScriptContext())
  {
    Html.AddScriptBlock(@"
        var news_article_details = {};

        (function (index) {

            news_article_details = index;

            var hub = jQuery.connection.newsViewHub;

            index.Id = ko.observable();
            index.ItemId = ko.observable();
            index.CreatedBy = ko.observable();
            index.CreationDateTime = ko.observable();
            index.Title = ko.observable();
            index.Content = ko.observable();
            index.History = ko.observableArray();

            index.raiseClose = function () {
                index.detailModal.modal('hide');
            };

            index.raiseEdit = function (obj) {
                index.detailModal.modal('hide');
                jQuery(document).trigger('newsArticleEdit', [obj.ItemId()]);
            };

            index.raiseDelete = function (obj) {
                index.detailModal.modal('hide');
                jQuery(document).trigger('newsArticleDelete', [obj.ItemId()]);
            };

            hub.handleRenamedNewsArticleTitleEventMessage = function(id, newTitle) {
                if (index.Id() != id)
                    return;

                if (index.Title() == newTitle)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                index.Title(newTitle);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleUpdatedNewsArticleContentEventMessage = function(id, newContent) {
                if (index.Id() != id)
                    return;

                if (index.Content() == newContent)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                index.Content(newContent);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleDeletedNewsArticleEventMessage = function(id) {
                if (index.ItemId() != id)
                    return;

                jQuery(document).trigger('publishNotAllowedNotification', ['News Article No Longer Available.', 'This news article has been removed by another user. The window will automatically close.']);
                index.detailModal.modal('hide');
                index.Id(null);
            };

            jQuery(document).bind('newsArticleDetails', function (event, newsArticle) {

                jQuery.getJSON('/News/GetDetails/' + newsArticle.Id(), function (data) {

                    index.Id(data.Id);
                    index.ItemId(data.ItemId);
                    index.CreatedBy(data.CreatedBy);
                    index.CreationDateTime(data.CreationDateTime);
                    index.Title(data.Title);
                    index.Content(data.Content);
                    index.History(data.History);

                    index.detailModal.modal('show');
                });
            });

            jQuery(function () {
                ko.applyBindings(index, jQuery('#details-news-article-container')[0]);
                index.detailModal = jQuery('#news-article-details-modal').modal({ backdrop: true, closeOnEscape: true, modal: true, show: false });
            });

        } (news_article_details));");
  }
}