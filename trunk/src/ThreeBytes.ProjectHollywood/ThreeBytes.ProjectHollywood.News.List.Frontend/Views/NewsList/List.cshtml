@model PagedNewsListNewsArticleViewModel
@{
    ViewBag.Title = @Resources.BrowserTitle;
}
<div id="latest-news-articles-container">
    <div data-bind="latestItems: latestViewModel" class="span9"></div>
</div>
<div id="paged-news-articles-container">
    <div data-bind="pagedGrid: pagedViewModel, pagedGridTemplate: 'paged-news-articles-table-tmpl'"></div>
</div>
<script type="text/x-jquery-tmpl" id="paged-news-articles-table-tmpl">
    <div id="paged-news-articles-container" data-bind="visible: items().length > 0, foreach: items">
        <div class="widget news-article">
            <div class="widget-header">
                <i class="icon-list-alt"></i>
                <h3 data-bind="fadeInText: Title"></h3>
                <div class="pull-right-menu">
                    @if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "NewsManager" }))
                    {
                        <div class="btn-group open btn-toolbar">
                            <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">Options <span class="caret"></span></button>
                            <ul class="dropdown-menu">
                                <li><a href="#" data-bind="click: function(event) { $parent.additionalFunctions.raiseDetails($data); }">More</a></li>
                                <li class="divider"></li>
                                <li><a href="#" data-bind="click: function(event) { $parent.additionalFunctions.raiseEdit($data); }">@Resources.Edit</a></li>
                                <li><a href="#" data-bind="click: function(event) { $parent.additionalFunctions.raiseDelete($data); }">@Resources.Delete</a></li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        <button class="btn btn-primary" data-bind="click: function(event) { $parent.additionalFunctions.raiseDetails($data); }">More</button>
                    }
                </div>
            </div>
            <div class="widget-content">
                <div class="news-item-detail">
                    <p class="news-item-preview" data-bind="fadeInText: Content"></p>
                </div>
                <div class="news-item-date">
                    <span class="news-item-day"><span data-bind="fadeInText: CreationDateTime"></span></span>
                    by <span class="news-item-month"><span data-bind="fadeInText: CreatedBy"></span></span>
                </div>
            </div>
        </div>
    </div>
</script>
@{ 
    using (Html.BeginScriptContext())
    {
        Html.AddScriptBlock(@"
        var news_articles_latest_list  = {};
    
        (function (index) {

            var itemMapping = {
			    'CreationDateTime': ko.utils.getTimeAgoFromJson(),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
        
            news_articles_latest_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.MostRecentResult)) + @", mapping);

            index.latestViewModel = new ko.latestItems.viewModel({
                controller: 'News/List',
                action: 'GetNewerThan',
                data: index,
                singular: '" + @Resources.NewsArticle + @"',
                plural: '" + @Resources.NewsArticles + @"',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                divIdentifier: 'latest-news-articles-container',
                pagingComponentIdentifier: 'paged-news-articles',
                columns: [
                    { headerText: 'Created By', rowText: 'CreatedBy' },
                    { headerText: 'Created On', rowText: 'CreationDateTime' },
                    { headerText: 'Title', rowText: 'Title' }
                ]
            });

            jQuery(function() {
                ko.applyBindings(index, jQuery('#latest-news-articles-container')[0]);
            });
        
        } (news_articles_latest_list));
    
        var news_articles_list  = {};

        (function (index) {

            var itemMapping = {
			    'CreationDateTime': ko.utils.getTimeAgoFromJson(),
                'LastModifiedDateTime': ko.utils.getDateFromJson('dd/MMM HH:mm')
		    };

            var itemViewModel = function(data) {
			    ko.mapping.fromJS(data, itemMapping, this);
		    };

            var mapping = {	
			    'Items': {
				    create: function(options) {
					    return new itemViewModel(options.data);
				    }
			    }
		    };
        
            news_articles_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model.PagedResult)) + @", mapping);

            index.HighlightEdits = ko.observable(false);

            index.pagedViewModel = new ko.pagedGrid.viewModel({
                controller: 'News',
                action: 'GetPage',
                data: index,
                singular: '" + @Resources.NewsArticle + @"',
                plural: '" + @Resources.NewsArticles + @"',
                pagingComponentIdentifier: 'paged-news-articles',
                loadPageCallback: function(data) {
                    ko.mapping.fromJS(data, index);
                },
                columns: [
                    { headerText: 'Created By', rowText: 'CreatedBy' },
                    { headerText: 'Created On', rowText: 'CreationDateTime' },
                    { headerText: 'Title', rowText: 'Title' },
                    { headerText: 'Content', rowText: 'Content' }
                ],
                additionalFunctions: {
                    raiseEdit: function (obj) {
                        jQuery(document).trigger('newsArticleEdit', [obj.Id()]);
                    },
                    raiseDetails: function (obj) {
                        jQuery(document).trigger('newsArticleDetails', [obj]);
                    },
                    raiseDelete: function (obj) {
                        jQuery(document).trigger('newsArticleDelete', [obj.Id()]);
                    }
                },
                updateEvent: null,
                deleteEvent: null
            });

            var hub = jQuery.connection.newsListHub;

            hub.handleRenamedNewsArticleTitleEventMessage = function(id, newTitle) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.Title() == newTitle)
                    return;
                
                ko.bindingHandlers.fadeInText.highlight = true;
                update.Title(newTitle);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleUpdatedNewsArticleContentEventMessage = function(id, newContent) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.Content() == newContent)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                update.Content(newContent);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleDeletedNewsArticleEventMessage = function(id) {
                var toDelete = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (toDelete == null)
                    return;

                index.Items.remove(toDelete);
                index.TotalItemCount((index.TotalItemCount() - 1))
            };

            jQuery(function() {
                ko.applyBindings(index, jQuery('#paged-news-articles-container')[0]);
            });

        } (news_articles_list));");
    }
}
