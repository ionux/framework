// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.7.1.0
//      SpecFlow Generator Version:1.7.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ThreeBytes.ProjectHollywood.News.Management.Frontend.Tests.Features.PreCommands
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.7.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DeletedNewsArticlePreCommand")]
    public partial class DeletedNewsArticlePreCommandFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DeletedNewsArticlePreCommand.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DeletedNewsArticlePreCommand", "Upon Deletion of a News Management Article the pre command should be executed.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create DeletedNewsArticlePreCommand passing null as the Bus Throws Arguement Null" +
            " Exception")]
        public virtual void CreateDeletedNewsArticlePreCommandPassingNullAsTheBusThrowsArguementNullException()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create DeletedNewsArticlePreCommand passing null as the Bus Throws Arguement Null" +
                    " Exception", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("I have a validation resolver");
#line 6
 testRunner.And("I have a null service bus");
#line 7
 testRunner.When("I create a DeletedNewsArticlePreCommand");
#line 8
 testRunner.Then("a null argument exception will be thrown");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create DeletedNewsArticlePreCommand passing null as the Validation Resolver Throw" +
            "s Arguement Null Exception")]
        public virtual void CreateDeletedNewsArticlePreCommandPassingNullAsTheValidationResolverThrowsArguementNullException()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create DeletedNewsArticlePreCommand passing null as the Validation Resolver Throw" +
                    "s Arguement Null Exception", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I have a null validation resolver");
#line 12
 testRunner.When("I create a DeletedNewsArticlePreCommand");
#line 13
 testRunner.Then("a null argument exception will be thrown");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create DeletedNewsArticlePreCommand passing null as the Service Throws Arguement " +
            "Null Exception")]
        public virtual void CreateDeletedNewsArticlePreCommandPassingNullAsTheServiceThrowsArguementNullException()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create DeletedNewsArticlePreCommand passing null as the Service Throws Arguement " +
                    "Null Exception", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("I have a null service");
#line 17
 testRunner.When("I create a DeletedNewsArticlePreCommand");
#line 18
 testRunner.Then("a null argument exception will be thrown");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Execute DeletedNewsArticlePreCommand with a Valid News Management Article")]
        public virtual void ExecuteDeletedNewsArticlePreCommandWithAValidNewsManagementArticle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Execute DeletedNewsArticlePreCommand with a Valid News Management Article", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I have a validation resolver");
#line 22
 testRunner.And("I have a mocked service");
#line 23
 testRunner.And("I have a mocked service bus");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "CreatedBy",
                        "Title",
                        "Content"});
            table1.AddRow(new string[] {
                        "Jonathan",
                        "Test Title",
                        "Test Content"});
#line 24
 testRunner.And("I have a saved news management article with the properties", ((string)(null)), table1);
#line 27
 testRunner.And("I setup the deletion pre command");
#line 28
 testRunner.When("I execute the deletion pre command");
#line 29
 testRunner.Then("the deletion command result should have executed");
#line 30
 testRunner.And("the deletion command result should be valid");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Execute DeletedNewsArticlePreCommand without a saved News Management Article")]
        public virtual void ExecuteDeletedNewsArticlePreCommandWithoutASavedNewsManagementArticle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Execute DeletedNewsArticlePreCommand without a saved News Management Article", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I have a validation resolver");
#line 34
 testRunner.And("I have a mocked service");
#line 35
 testRunner.And("I have a mocked service bus");
#line 36
 testRunner.And("I do not have a saved news management article with the identifier 4f80bc4a-384d-4" +
                    "5fc-881a-432b2075d746");
#line 37
 testRunner.And("I initialise the DeletedNewsArticlePreCommand to delete the news management artic" +
                    "le with the identifier 4f80bc4a-384d-45fc-881a-432b2075d746");
#line 38
 testRunner.When("I execute the deletion pre command");
#line 39
 testRunner.Then("the deletion command result should have executed");
#line 40
 testRunner.And("the deletion command result should be invalid");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#endregion
