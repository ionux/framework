<div id="thespian-list-container">
<div class="row">
    <div class="span12 columns">
        <div class="widget">
            <div class="widget-header">
                <i class="icon-user"></i>
                <h3>Our Clients</h3>
                <div class="pull-right-menu btn-toolbar">
                    <div class="btn-group inline" data-toggle="buttons-radio">
                        <button class="btn btn-primary" data-bind="click: function() { setThespianTypeFilter('Artist') }, css: { active: ThespianTypeFilter() == 'Artist' }">Artists</button>
                        <button class="btn btn-primary" data-bind="click: function() { setThespianTypeFilter('Creative') }, css: { active: ThespianTypeFilter() == 'Creative' }">Creatives</button>
                    </div>
                    <div class="btn-group inline" data-toggle="buttons-radio">
                        <button class="btn btn-primary" data-bind="click: function() { setGenderFilter('Male') }, css: { active: GenderFilter() == 'Male' }">Male</button>
                        <button class="btn btn-primary" data-bind="click: function() { setGenderFilter('Female') }, css: { active: GenderFilter() == 'Female' }">Female</button>
                    </div>
                    <div class="btn-group inline" data-toggle="buttons-radio">
                        <button class="btn btn-primary" data-bind="click: setAKFilter, css: { active: AToKFilter }">A-K</button>
                        <button class="btn btn-primary" data-bind="click: setLZFilter, css: { active: LToKFilter }">L-Z</button>
                    </div>
                    @if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "ThespianManager" }))
                    {
                        <div class="btn-group inline">
                            <button class="btn btn-primary" data-bind="click: raiseCreate">Create</button>
                        </div>
                    }
                </div>
            </div>
            <div class="widget-content">
                <div id="thespian-filtered-list-container" data-bind="visible: Items().length > 0">
                    <ul id="thespian-list" class="thumbnails" data-bind="foreach: Items">
                        <li class="span3">
                            <div class="thumbnail">
                                <img data-bind="attr: { src: ProfileImageUrl() }" />
                                <div class="caption">
                                    <h5>
                                        <span data-bind="fadeInText: FirstName"></span> <span data-bind="fadeInText: LastName"></span>
                                    </h5>
                                    <p>
                                        Add a trunced Client Summary here?
                                    </p>
                                    @if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "ThespianManager" }))
                                    {
                                        <div class="btn-group open">
                                            <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                                                Select <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="#" data-bind="click: $parent.raiseDetails">More</a></li>
                                                <li class="divider"></li>
                                                <li><a href="#" data-bind="click: $parent.raiseEdit">@Resources.Edit</a></li>
                                                <li><a href="#" data-bind="click: $parent.raiseDelete">@Resources.Delete</a></li>
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <button class="btn btn-info" data-bind="click: $parent.raiseDetails">More</button>
                                    }
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>  
        </div>
    </div>
</div>

@{ 
    using (Html.BeginScriptContext())
    {
        Html.AddScriptBlock(@"

        var thespian_list  = {};

        (function (index) {

            var mapping = {
			    create: function(options) {
                    var item = ko.mapping.fromJS(options.data);

                    item.ProfileImageUrl = ko.computed(function() {
                        if(item.ProfileThumbnailImageLocation() != '' && item.ProfileThumbnailImageLocation() != null && item.ProfileThumbnailImageLocation() != typeof('undefined'))
                            return '" + @Url.Action("GetProfileImage", "OurClients") + @"' + '/' + item.ProfileThumbnailImageLocation();

                        return '" + @Url.Content("img/placeholder260x180.gif") + @"';
                    });

                    return item;
                }
		    };

            var hub = jQuery.connection.thespianListHub;
        
            thespian_list = index;

            index.ThespianTypeFilter = ko.observable('Artist');
            index.GenderFilter = ko.observable('Male');
            index.AToKFilter = ko.observable(true);
            index.LToKFilter = ko.observable(false);
            index.Items = ko.observableArray();
            index.GetItems = ko.computed(function() {         
                jQuery.getJSON('/OurClients/GetArtists', { 'type': index.ThespianTypeFilter(), 'gender': index.GenderFilter(), 'aToKFilter': index.AToKFilter(), 'lToKFilter': index.LToKFilter() }, function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Thespians, function() {
                        index.Items.push(ko.mapping.fromJS(this, mapping));
                    });
                });
            }, index);

            index.raiseCreate = function () {
                jQuery(document).trigger('thespianCreate');
            };

            index.setGenderFilter = function(gender) {
                index.GenderFilter(gender);
            };

            index.setThespianTypeFilter = function(type) {
                index.ThespianTypeFilter(type);
            };

            index.setAKFilter = function() {
                index.AToKFilter(true);
                index.LToKFilter(false);
            };

            index.setLZFilter = function() {
                index.AToKFilter(false);
                index.LToKFilter(true);
            };

            index.raiseEdit = function (obj) {
                jQuery(document).trigger('thespianEdit', [obj.Id()]);
            };
        
            index.raiseDetails = function (obj) {
                jQuery(document).trigger('thespianDetails', [obj]);
            };
        
            index.raiseDelete = function (obj) {
                jQuery(document).trigger('thespianDelete', [obj.Id()]);
            };

            hub.handleCreatedThespianEventMessage = function(message) {
                var exists = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == message.Id;
                });

                if (exists != null)
                    return;

                jQuery.getJSON('/OurClients/GetArtists', { 'type': index.ThespianTypeFilter(), 'gender': index.GenderFilter(), 'aToKFilter': index.AToKFilter(), 'lToKFilter': index.LToKFilter() }, function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Thespians, function() {
                        index.Items.push(ko.mapping.fromJS(this, mapping));
                    });
                });
            };

            hub.handleRenamedThespianEventMessage = function(id, newFirstName, newLastName) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;

                if (update.FirstName() != newFirstName)
                    update.FirstName(newFirstName);

                if (update.LastName() != newLastName)
                    update.LastName(newLastName);

                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleThespianProfileImageUpdatedEventMessage = function(id, newProfileImageLocation, newProfileThumbnailImageLocation) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.ProfileImageLocation() != newProfileImageLocation)
                    update.ProfileImageLocation(newProfileImageLocation);

                if (update.ProfileThumbnailImageLocation() != newProfileThumbnailImageLocation)
                    update.ProfileThumbnailImageLocation(newProfileThumbnailImageLocation);
            };

            hub.handleDeletedThespianEventMessage = function(id) {
                var toDelete = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (toDelete == null)
                    return;

                index.Items.remove(toDelete);
            };

            jQuery(function() {
                ko.applyBindings(index, jQuery('#thespian-list-container')[0]);
            });

        } (thespian_list));");
    }
}
