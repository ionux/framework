#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeBytes.ProjectHollywood.Thespian.List.Frontend.Views.ThespianList
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Script.Serialization;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using ThreeBytes.Core.Extensions.Mvc;
    using ThreeBytes.Core.Security.Concrete;
    using ThreeBytes.ProjectHollywood.Thespian.List.Frontend.Models;
    using ThreeBytes.ProjectHollywood.Thespian.List.Resources;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/ThespianList/List.cshtml")]
    public class List : System.Web.Mvc.WebViewPage<dynamic>
    {
        public List()
        {
        }
        public override void Execute()
        {
WriteLiteral("<div id=\"thespian-list-container\">\r\n<div class=\"row\">\r\n    <div class=\"span12 col" +
"umns\">\r\n        <div class=\"widget\">\r\n            <div class=\"widget-header\">\r\n " +
"               <i class=\"icon-user\"></i>\r\n                <h3>Our Clients</h3>\r\n" +
"                <div class=\"pull-right-menu btn-toolbar\">\r\n                    <" +
"div class=\"btn-group inline\" data-toggle=\"buttons-radio\">\r\n                     " +
"   <button class=\"btn btn-primary\" data-bind=\"click: function() { setThespianTyp" +
"eFilter(\'Artist\') }, css: { active: ThespianTypeFilter() == \'Artist\' }\">Artists<" +
"/button>\r\n                        <button class=\"btn btn-primary\" data-bind=\"cli" +
"ck: function() { setThespianTypeFilter(\'Creative\') }, css: { active: ThespianTyp" +
"eFilter() == \'Creative\' }\">Creatives</button>\r\n                    </div>\r\n     " +
"               <div class=\"btn-group inline\" data-toggle=\"buttons-radio\">\r\n     " +
"                   <button class=\"btn btn-primary\" data-bind=\"click: function() " +
"{ setGenderFilter(\'Male\') }, css: { active: GenderFilter() == \'Male\' }\">Male</bu" +
"tton>\r\n                        <button class=\"btn btn-primary\" data-bind=\"click:" +
" function() { setGenderFilter(\'Female\') }, css: { active: GenderFilter() == \'Fem" +
"ale\' }\">Female</button>\r\n                    </div>\r\n                    <div cl" +
"ass=\"btn-group inline\" data-toggle=\"buttons-radio\">\r\n                        <bu" +
"tton class=\"btn btn-primary\" data-bind=\"click: setAKFilter, css: { active: AToKF" +
"ilter }\">A-K</button>\r\n                        <button class=\"btn btn-primary\" d" +
"ata-bind=\"click: setLZFilter, css: { active: LToKFilter }\">L-Z</button>\r\n       " +
"             </div>\r\n");


            
            #line 21 "..\..\Views\ThespianList\List.cshtml"
                     if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "ThespianManager" }))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div class=\"btn-group inline\">\r\n                         " +
"   <button class=\"btn btn-primary\" data-bind=\"click: raiseCreate\">Create</button" +
">\r\n                        </div>\r\n");


            
            #line 26 "..\..\Views\ThespianList\List.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral(@"                </div>
            </div>
            <div class=""widget-content"">
                <div id=""thespian-filtered-list-container"" data-bind=""visible: Items().length > 0"">
                    <ul id=""thespian-list"" class=""thumbnails"" data-bind=""foreach: Items"">
                        <li class=""span3"">
                            <div class=""thumbnail"">
                                <img data-bind=""attr: { src: ProfileImageUrl() }"" />
                                <div class=""caption"">
                                    <h5>
                                        <span data-bind=""fadeInText: FirstName""></span> <span data-bind=""fadeInText: LastName""></span>
                                    </h5>
                                    <p>
                                        Add a trunced Client Summary here?
                                    </p>
");


            
            #line 42 "..\..\Views\ThespianList\List.cshtml"
                                     if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "ThespianManager" }))
                                    {

            
            #line default
            #line hidden
WriteLiteral(@"                                        <div class=""btn-group open"">
                                            <button class=""btn btn-primary dropdown-toggle"" data-toggle=""dropdown"">
                                                Select <span class=""caret""></span>
                                            </button>
                                            <ul class=""dropdown-menu"">
                                                <li><a href=""#"" data-bind=""click: $parent.raiseDetails"">More</a></li>
                                                <li class=""divider""></li>
                                                <li><a href=""#"" data-bind=""click: $parent.raiseEdit"">");


            
            #line 51 "..\..\Views\ThespianList\List.cshtml"
                                                                                                Write(Resources.Edit);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n                                                <li><a href=\"#\" data-b" +
"ind=\"click: $parent.raiseDelete\">");


            
            #line 52 "..\..\Views\ThespianList\List.cshtml"
                                                                                                  Write(Resources.Delete);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n                                            </ul>\r\n                   " +
"                     </div>\r\n");


            
            #line 55 "..\..\Views\ThespianList\List.cshtml"
                                    }
                                    else
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <button class=\"btn btn-info\" data-bind=\"c" +
"lick: $parent.raiseDetails\">More</button>\r\n");


            
            #line 59 "..\..\Views\ThespianList\List.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                            </div>\r\n     " +
"                   </li>\r\n                    </ul>\r\n                </div>\r\n   " +
"         </div>  \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");


            
            #line 70 "..\..\Views\ThespianList\List.cshtml"
   
    using (Html.BeginScriptContext())
    {
        Html.AddScriptBlock(@"

        var thespian_list  = {};

        (function (index) {

            var mapping = {
			    create: function(options) {
                    var item = ko.mapping.fromJS(options.data);

                    item.ProfileImageUrl = ko.computed(function() {
                        if(item.ProfileThumbnailImageLocation() != '' && item.ProfileThumbnailImageLocation() != null && item.ProfileThumbnailImageLocation() != typeof('undefined'))
                            return '" + @Url.Action("GetProfileImage", "OurClients") + @"' + '/' + item.ProfileThumbnailImageLocation();

                        return '" + @Url.Content("img/placeholder260x180.gif") + @"';
                    });

                    return item;
                }
		    };

            var hub = jQuery.connection.thespianListHub;
        
            thespian_list = index;

            index.ThespianTypeFilter = ko.observable('Artist');
            index.GenderFilter = ko.observable('Male');
            index.AToKFilter = ko.observable(true);
            index.LToKFilter = ko.observable(false);
            index.Items = ko.observableArray();
            index.GetItems = ko.computed(function() {         
                jQuery.getJSON('/OurClients/GetArtists', { 'type': index.ThespianTypeFilter(), 'gender': index.GenderFilter(), 'aToKFilter': index.AToKFilter(), 'lToKFilter': index.LToKFilter() }, function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Thespians, function() {
                        index.Items.push(ko.mapping.fromJS(this, mapping));
                    });
                });
            }, index);

            index.raiseCreate = function () {
                jQuery(document).trigger('thespianCreate');
            };

            index.setGenderFilter = function(gender) {
                index.GenderFilter(gender);
            };

            index.setThespianTypeFilter = function(type) {
                index.ThespianTypeFilter(type);
            };

            index.setAKFilter = function() {
                index.AToKFilter(true);
                index.LToKFilter(false);
            };

            index.setLZFilter = function() {
                index.AToKFilter(false);
                index.LToKFilter(true);
            };

            index.raiseEdit = function (obj) {
                jQuery(document).trigger('thespianEdit', [obj.Id()]);
            };
        
            index.raiseDetails = function (obj) {
                jQuery(document).trigger('thespianDetails', [obj]);
            };
        
            index.raiseDelete = function (obj) {
                jQuery(document).trigger('thespianDelete', [obj.Id()]);
            };

            hub.handleCreatedThespianEventMessage = function(message) {
                var exists = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == message.Id;
                });

                if (exists != null)
                    return;

                jQuery.getJSON('/OurClients/GetArtists', { 'type': index.ThespianTypeFilter(), 'gender': index.GenderFilter(), 'aToKFilter': index.AToKFilter(), 'lToKFilter': index.LToKFilter() }, function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Thespians, function() {
                        index.Items.push(ko.mapping.fromJS(this, mapping));
                    });
                });
            };

            hub.handleRenamedThespianEventMessage = function(id, newFirstName, newLastName) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;

                if (update.FirstName() != newFirstName)
                    update.FirstName(newFirstName);

                if (update.LastName() != newLastName)
                    update.LastName(newLastName);

                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleThespianProfileImageUpdatedEventMessage = function(id, newProfileImageLocation, newProfileThumbnailImageLocation) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.ProfileImageLocation() != newProfileImageLocation)
                    update.ProfileImageLocation(newProfileImageLocation);

                if (update.ProfileThumbnailImageLocation() != newProfileThumbnailImageLocation)
                    update.ProfileThumbnailImageLocation(newProfileThumbnailImageLocation);
            };

            hub.handleDeletedThespianEventMessage = function(id) {
                var toDelete = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (toDelete == null)
                    return;

                index.Items.remove(toDelete);
            };

            jQuery(function() {
                ko.applyBindings(index, jQuery('#thespian-list-container')[0]);
            });

        } (thespian_list));");
    }


            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
