<div id="team-employees-list-container">
    <div class="row">
        <div class="span12">
            <div id="team-employees-list-display-container" data-bind="visible: Items().length > 0">
                <div id="team-employees-list" data-bind="foreach: Items">
                    <a href="#" data-role="button" data-bind="click: $parent.raiseDetails" data-icon="arrow-r" data-iconpos="right"><span data-bind="fadeInText: FirstName"></span>&nbsp;<span data-bind="fadeInText: LastName"></span></a>
                </div>
            </div>
        </div>
    </div>
</div>

@{ 
    using (Html.BeginScriptContext())
    {
        ScriptExtensions.AddScriptBlock(Html, @"
    
        var team_employees_list  = {};

        (function (index) {

            var hub = jQuery.connection.teamListHub;
        
            team_employees_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model)) + @");
        
            index.raiseDetails = function (obj) {
                jQuery(document).trigger('teamEmployeeDetails', [obj]);
            };

            jQuery(function() {
                ko.applyBindings(index, jQuery('#team-employees-list-container')[0]);
            });

            jQuery(document).bind('newTeamEmployees', function(event, items) {
                jQuery.each(items, function(i, item) {
                    index.Items.unshift(item);
                });
            });

            hub.handleCreatedTeamEmployeeEventMessage = function(message) {
                var exists = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == message.Id;
                });

                if (exists != null)
                    return;

                jQuery.getJSON('" + @Url.Action("GetAll", "Team") + @"', function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Items, function() {
                        index.Items.push(ko.mapping.fromJS(this));
                    });
                });
            };

            hub.handleRenamedTeamEmployeeEventMessage = function(id, newFirstName, newLastName) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;

                if (update.FirstName() != newFirstName)
                    update.FirstName(newFirstName);

                if (update.LastName() != newLastName)
                    update.LastName(newLastName);

                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleRenamedTeamEmployeeJobTitleEventMessage = function(id, newJobTitle) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.JobTitle() == newJobTitle)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                update.JobTitle(newJobTitle);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleUpdatedTeamEmployeeSummaryEventMessage = function(id, newSummary) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.Summary() == newSummary)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                update.Summary(newSummary);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleDeletedTeamEmployeeEventMessage = function(id) {
                var toDelete = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (toDelete == null)
                    return;

                index.Items.remove(toDelete);
            };

            jQuery(document).bind('teamEmployeeUpdated', function (event, id) {
                setTimeout(function() {
                    jQuery.getJSON('/Team/List/Get/' + id, function(data) {
                        var replacement = ko.mapping.fromJS(data);
                    
                        jQuery.each(index.Items(), function(i, item) {
                            if (item.Id() == id) {
                                index.Items.splice(i, 1, replacement);
                                return false;
                            }
                        });
                    });
                }, 200);
            });
        
            jQuery(document).bind('teamEmployeeDeleted', function (event, id) {
                jQuery.each(index.Items(), function(i, item) {
                    if (item.Id() == id) {
                        index.Items.splice(i, 1);
                        return false;
                    }
                });
            });

        } (team_employees_list));");
    }
}