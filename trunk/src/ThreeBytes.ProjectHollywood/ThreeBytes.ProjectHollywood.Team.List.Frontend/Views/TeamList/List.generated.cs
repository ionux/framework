#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeBytes.ProjectHollywood.Team.List.Frontend.Views.TeamList
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Script.Serialization;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using ThreeBytes.Core.Extensions.Mvc;
    using ThreeBytes.Core.Security.Concrete;
    using ThreeBytes.ProjectHollywood.Team.List.Resources;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/TeamList/List.cshtml")]
    public class List : System.Web.Mvc.WebViewPage<dynamic>
    {
        public List()
        {
        }
        public override void Execute()
        {
WriteLiteral("<div id=\"team-employees-list-container\">\r\n    <div class=\"widget\">\r\n        <div " +
"class=\"widget-header\">\r\n            <i class=\"icon-user\"></i>\r\n            <h3>O" +
"ur Team</h3>\r\n");


            
            #line 6 "..\..\Views\TeamList\List.cshtml"
             if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "TeamManager" }))
            {

            
            #line default
            #line hidden
WriteLiteral("                <div class=\"pull-right-menu\">\r\n                    <button class=" +
"\"btn btn-primary\" data-bind=\"click: raiseCreate\">Create</button>\r\n              " +
"  </div>\r\n");


            
            #line 11 "..\..\Views\TeamList\List.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral(@"        </div>
        <div class=""widget-content"">
            <ul id=""team-employees-list"" class=""thumbnails"" data-bind=""foreach: Items, visible: Items().length > 0"">
                <li class=""span3"">
                    <div class=""thumbnail"">
                        <img data-bind=""attr: { src: ProfileImageUrl() }"" />
                        <div class=""caption"">
                            <h5>
                                <span data-bind=""fadeInText: FirstName""></span> <span data-bind=""fadeInText: LastName""></span>
                            </h5>
                            <p>
                                Job Title: <span data-bind=""fadeInText: JobTitle""></span>
                            </p>
");


            
            #line 25 "..\..\Views\TeamList\List.cshtml"
                             if (Context.User.Identity.IsAuthenticated && ((ThreeBytesPrincipal)Context.User).IsInAnyRoles(new[] { "Creator", "Admin", "TeamManager" }))
                            {

            
            #line default
            #line hidden
WriteLiteral(@"                                <div class=""btn-group open"">
                                    <button class=""btn btn-primary dropdown-toggle"" data-toggle=""dropdown"">Select <span class=""caret""></span></button>
                                    <ul class=""dropdown-menu"">
                                        <li><a href=""#"" data-bind=""click: $parent.raiseDetails"">");


            
            #line 30 "..\..\Views\TeamList\List.cshtml"
                                                                                           Write(Resources.Details);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n                                        <li class=\"divider\"></li>\r\n   " +
"                                     <li><a href=\"#\" data-bind=\"click: $parent.r" +
"aiseEdit\">");


            
            #line 32 "..\..\Views\TeamList\List.cshtml"
                                                                                        Write(Resources.Edit);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n                                        <li><a href=\"#\" data-bind=\"cli" +
"ck: $parent.raiseDelete\">");


            
            #line 33 "..\..\Views\TeamList\List.cshtml"
                                                                                          Write(Resources.Delete);

            
            #line default
            #line hidden
WriteLiteral("</a></li>\r\n                                    </ul>\r\n                           " +
"     </div>\r\n");


            
            #line 36 "..\..\Views\TeamList\List.cshtml"
                            }
                            else
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <button class=\"btn btn-info\" data-bind=\"click: $p" +
"arent.raiseDetails\">More</button>\r\n");


            
            #line 40 "..\..\Views\TeamList\List.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                    </div>\r\n                </li>" +
"\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");


            
            #line 49 "..\..\Views\TeamList\List.cshtml"
  
  using (Html.BeginScriptContext())
  {
    ScriptExtensions.AddScriptBlock(Html, @"
    
        var team_employees_list  = {};

        (function (index) {
            
            var itemMapping = {
                create: function(options) {
                    var item = ko.mapping.fromJS(options.data);

                    item.ProfileImageUrl = ko.computed(function() {
                        if(item.ProfileThumbnailImageLocation() != '' && item.ProfileThumbnailImageLocation() != null && item.ProfileThumbnailImageLocation() != typeof('undefined'))
                            return '" + @Url.Action("GetProfileImage", "Team") + @"' + '/' + item.ProfileThumbnailImageLocation();

                        return '" + @Url.Content("img/placeholder260x180.gif") + @"';
                    });

                    return item;
                }
            };

            var mapping = {
			    'Items': {
                    create: function(options) {
                        return ko.mapping.fromJS(options.data, itemMapping);
                    }
                }
		    };

            var hub = jQuery.connection.teamListHub;
        
            team_employees_list = index = ko.mapping.fromJS(" + @Html.Raw(new JavaScriptSerializer().Serialize(Model)) + @", mapping);

            index.raiseCreate = function() {
                jQuery(document).trigger('teamEmployeeCreate');
            };

            index.raiseEdit = function (obj) {
                jQuery(document).trigger('teamEmployeeEdit', [obj.Id()]);
            };
        
            index.raiseDetails = function (obj) {
                jQuery(document).trigger('teamEmployeeDetails', [obj]);
            };
        
            index.raiseDelete = function (obj) {
                jQuery(document).trigger('teamEmployeeDelete', [obj.Id()]);
            };

            jQuery(function() {
                ko.applyBindings(index, jQuery('#team-employees-list-container')[0]);
            });

            jQuery(document).bind('newTeamEmployees', function(event, items) {
                jQuery.each(items, function(i, item) {
                    index.Items.unshift(item);
                });
            });

            hub.handleCreatedTeamEmployeeEventMessage = function(message) {
                var exists = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == message.Id;
                });

                if (exists != null)
                    return;

                jQuery.getJSON('" + @Url.Action("GetAll", "Team") + @"', function(data) {
                    
                    index.Items.removeAll();

                    jQuery.each(data.Items, function() {
                        index.Items.push(ko.mapping.fromJS(this, itemMapping));
                    });
                });
            };

            hub.handleRenamedTeamEmployeeEventMessage = function(id, newFirstName, newLastName) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;

                if (update.FirstName() != newFirstName)
                    update.FirstName(newFirstName);

                if (update.LastName() != newLastName)
                    update.LastName(newLastName);

                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleRenamedTeamEmployeeJobTitleEventMessage = function(id, newJobTitle) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.JobTitle() == newJobTitle)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                update.JobTitle(newJobTitle);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleUpdatedTeamEmployeeSummaryEventMessage = function(id, newSummary) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.Summary() == newSummary)
                    return;

                ko.bindingHandlers.fadeInText.highlight = true;
                update.Summary(newSummary);
                ko.bindingHandlers.fadeInText.highlight = false;
            };

            hub.handleTeamProfileImageUpdatedEventMessage = function(id, newProfileImageLocation, newProfileThumbnailImageLocation) {
                var update = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (update == null)
                    return;

                if (update.ProfileImageLocation() != newProfileImageLocation)
                    update.ProfileImageLocation(newProfileImageLocation);

                if (update.ProfileThumbnailImageLocation() != newProfileThumbnailImageLocation)
                    update.ProfileThumbnailImageLocation(newProfileThumbnailImageLocation);
            };

            hub.handleDeletedTeamEmployeeEventMessage = function(id) {
                var toDelete = ko.utils.arrayFirst(index.Items(), function(item) {
                    return item.Id() == id;
                });

                if (toDelete == null)
                    return;

                index.Items.remove(toDelete);
            };

            jQuery(document).bind('teamEmployeeUpdated', function (event, id) {
                setTimeout(function() {
                    jQuery.getJSON('/Team/List/Get/' + id, function(data) {
                        var replacement = ko.mapping.fromJS(data);
                    
                        jQuery.each(index.Items(), function(i, item) {
                            if (item.Id() == id) {
                                index.Items.splice(i, 1, replacement);
                                return false;
                            }
                        });
                    });
                }, 200);
            });
        
            jQuery(document).bind('teamEmployeeDeleted', function (event, id) {
                jQuery.each(index.Items(), function(i, item) {
                    if (item.Id() == id) {
                        index.Items.splice(i, 1);
                        return false;
                    }
                });
            });

        } (team_employees_list));");
  }

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
